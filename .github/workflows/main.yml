# .github/workflows/deploy.yml

name: Deploy NGINX to EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Checkout code
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.29'
      id: install
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        

    - name: Execute AWS CLI command
      run: aws sts get-caller-identity

    - name: Authenticate with ECR
      run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/cicd-eks:latest .
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/cicd-eks:latest

    - name: aws version check
      run: |
        aws --version

    - name: Authenticate with EKS
      run: |
        aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name eks-task
        aws eks --region ${{ secrets.AWS_REGION }} get-token --cluster-name eks-task > ~/.kube/token
      shell: bash


    - name: Check Kubernetes cluster status
      run: kubectl cluster-info dump

    - name: Deploy to Kubernetes
      run: |
        kubectl cluster-info
        kubectl get pods -A
        
  
